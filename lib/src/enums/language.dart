// ignore_for_file: constant_identifier_names, public_member_api_docs

/// The list of all supported languages.
///
/// If the `Language Code` consists of more than one part, then you will find it separated by an `underscore`
/// For example: en_au, pt_br, zh_TW.
///
/// If the `Language Code` is a reserved keyword in Dart, then you will find it prefixed with `l_`
/// For example: l_as, l_is.
///
/// If you have the `Language Code` as `String` and you want to get the corresponding [Language] enum member, then you can use [fromCode] method.
enum Language {
  af,
  ak,
  am,
  ar_iq,
  ar,
  l_as,
  ay,
  az,
  be,
  bg,
  bho,
  bi,
  bm,
  bn,
  bs,
  ca,
  ceb,
  ch,
  chm,
  co,
  cs,
  cy,
  da,
  de,
  dv,
  dz,
  el,
  en_au,
  en_ca,
  en_in,
  en_ng,
  en_nz,
  en_us,
  en_za,
  en,
  es,
  et,
  eu,
  fa,
  fi,
  fil,
  fj,
  fo,
  fr,
  ga,
  gl,
  gn,
  gu,
  gv,
  ha,
  haw,
  he,
  hi,
  ho,
  hr,
  ht,
  hu,
  hy,
  id,
  ig,
  ilo,
  l_is,
  it,
  ja,
  jv,
  ka,
  kk,
  kl,
  km,
  kn,
  ko,
  kri,
  ku,
  ky,
  la,
  lb,
  lg,
  ln,
  lo,
  lt,
  lu,
  lv,
  mg,
  mh,
  mi,
  mk,
  ml,
  mn,
  mr,
  mrj,
  ms,
  mt,
  my,
  na,
  nb,
  nd,
  ne,
  nl,
  nn,
  no,
  nr,
  ny,
  pa,
  pap,
  pl,
  ps,
  pt_br,
  pt,
  rn,
  ro,
  ru,
  rw,
  sd,
  sg,
  si,
  sk,
  sl,
  sm,
  sn,
  so,
  sq,
  sr,
  ss,
  st,
  su,
  sv,
  sw,
  ta,
  te,
  tg,
  th,
  tk,
  tl,
  tn,
  to,
  tr,
  ty,
  uk,
  ur,
  uz,
  vi,
  xh,
  xx,
  yi,
  yo,
  yua,
  zh_TW,
  zh,
  zu;

  /// Returns the [Language] enum member from the given [languageCode] String.
  ///
  /// The [languageCode] is case insensitive
  static Language fromCode(String languageCode) {
    return Language.values.firstWhere(
      (language) => language.name.toLowerCase() == languageCode.toLowerCase(),
      orElse: () => Language.xx,
    );
  }
}
