// ignore_for_file: constant_identifier_names, public_member_api_docs

/// The list of all supported countries
/// If the `Country Code` consists of more than one part, then you will find it separated by an `underscore`
/// For example: sh_ac, sh_ta, united_nations
/// If the `Country Code` is a reserved keyword in Dart, then you will find it prefixed with `c_`
/// For example: c_as, c_do, c_in, c_is

enum Country {
  ad,
  ae,
  af,
  ag,
  ai,
  al,
  am,
  ao,
  aq,
  ar,
  c_as,
  at,
  au,
  aw,
  ax,
  az,
  ba,
  bb,
  bd,
  be,
  bf,
  bg,
  bh,
  bi,
  bj,
  bl,
  bm,
  bn,
  bo,
  bq,
  br,
  bs,
  bt,
  bv,
  bw,
  by,
  bz,
  ca,
  cc,
  cd,
  cf,
  cg,
  ch,
  ci,
  ck,
  cl,
  cm,
  cn,
  co,
  cp,
  cr,
  cu,
  cv,
  cw,
  cx,
  cy,
  cz,
  de,
  dg,
  dj,
  dk,
  dm,
  c_do,
  dz,
  ea,
  ec,
  ee,
  eg,
  eh,
  er,
  es,
  et,
  eu,
  fi,
  fj,
  fk,
  fm,
  fo,
  fr,
  ga,
  gb,
  gd,
  ge,
  gf,
  gg,
  gh,
  gi,
  gl,
  gm,
  gn,
  gp,
  gq,
  gr,
  gs,
  gt,
  gu,
  gw,
  gy,
  hk,
  hm,
  hn,
  hr,
  ht,
  hu,
  ic,
  id,
  ie,
  il,
  im,
  c_in,
  io,
  iq,
  ir,
  c_is,
  it,
  je,
  jm,
  jo,
  jp,
  ke,
  kg,
  kh,
  ki,
  km,
  kn,
  kp,
  kr,
  kw,
  ky,
  kz,
  la,
  lb,
  lc,
  li,
  lk,
  lr,
  ls,
  lt,
  lu,
  lv,
  ly,
  ma,
  mc,
  md,
  me,
  mf,
  mg,
  mh,
  mk,
  ml,
  mm,
  mn,
  mo,
  mp,
  mq,
  mr,
  ms,
  mt,
  mu,
  mv,
  mw,
  mx,
  my,
  mz,
  na,
  nc,
  ne,
  nf,
  ng,
  ni,
  nl,
  no,
  np,
  nr,
  nu,
  nz,
  om,
  pa,
  pe,
  pf,
  pg,
  ph,
  pk,
  pl,
  pm,
  pn,
  pr,
  ps,
  pt,
  pw,
  py,
  qa,
  re,
  ro,
  rs,
  ru,
  rw,
  sa,
  sb,
  sc,
  sd,
  se,
  sg,
  sh_ac,
  sh_ta,
  sh,
  si,
  sj,
  sk,
  sl,
  sm,
  sn,
  so,
  sr,
  ss,
  st,
  sv,
  sx,
  sy,
  sz,
  tc,
  td,
  tf,
  tg,
  th,
  tj,
  tk,
  tl,
  tm,
  tn,
  to,
  tr,
  tt,
  tv,
  tw,
  tz,
  ua,
  ug,
  um,
  united_nations,
  us,
  uy,
  uz,
  va,
  vc,
  ve,
  vg,
  vi,
  vn,
  vu,
  wf,
  ws,
  xk,
  xx,
  ye,
  yt,
  za,
  zm,
  zw;

  /// The [countryCode] is case insensitive
  static Country fromCode(String countryCode) {
    return Country.values.firstWhere(
      (country) => country.name.toLowerCase() == countryCode.toLowerCase(),
      orElse: () => Country.xx,
    );
  }
}
